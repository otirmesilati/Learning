Map from the following:
1. Mosh's HTML+CSS+JS intro: https://www.youtube.com/watch?v=qz0aGYrrlhU&t=386s
2. Nana's JS course: https://www.youtube.com/watch?v=FtaQSdrl7YA&t=1s     and finish with this: https://www.reddit.com/r/learnjavascript/comments/8wauhl/what_does_it_mean_when_people_say_javascript/
3. Mosh's TS course: https://www.youtube.com/watch?v=d56mG7DezGs
4. Comprehensive CSS course: https://www.youtube.com/watch?v=OXGznpKZ_sA&t=330s
5. Mosh's React intro: https://www.youtube.com/watch?v=SqcY0GlETPk 
6. Angular comprehensive project: https://www.youtube.com/watch?v=f7BJFTEbc10&t=295s
7. Cosden redux video : https://www.youtube.com/watch?v=5yEG6GhoJBs
8. Net Ninja's Vue playlist: https://www.youtube.com/watch?v=YrxBCBibVo0&list=PL4cUxeGkcC9hYYGbV60Vq3IXYNfDk8At1
9. Vite intro: https://www.youtube.com/watch?v=VAeRhmpcWEQ&t=63s 
10. Net Ninja's Sass Tutorial: https://www.youtube.com/watch?v=_kqN4hl9bGc&list=PL4cUxeGkcC9jxJX7vojNVK-o8ubDZEcNb
11. Net Ninja's Bootstrap Tutorial: https://www.youtube.com/watch?v=O_9u1P5YjVc&list=PL4cUxeGkcC9joIM91nLzd_qaH_AimmdAR
12. Net Ninja's Taildwind playlist: https://www.youtube.com/watch?v=bxmDnn7lrnk&list=PL4cUxeGkcC9gpXORlEHjc5bgnIi5HEGhw
13. Eliav Menache's Web course: https://www.youtube.com/watch?v=yXAkWZXyQ9Y&list=PLFeIOEkqiA9J6K4GHtlkAeCy2uUzZBfqh&index=2 
wordpress?

Nana's JS course:
1. 00:54 - Web workings in a nutshell 
2. 10:48 - JS role and it's frameworks
3. 16:54 - data types and variables and dev tools
4. 26:55 - operators
5. 29:52 - variables and use cases
6. 35:47 - js code execution
7. 44:40 - var vs let vs const
8. 54:04 - modularity and code readability
9. 1:00:10 - conditionals and comparison operators
10. 1:11:25 - functions
11. 1:34:09 - name conventions

Mosh's TS course:
1. 3:00 - TS in a nutshell, comparison to JS, and setup
2. 23:00 - datatypes, collections, and literals
3. 33:07 - enums
4. 36:30 - functions
5. 43:24 - object inferring and type hiding
6. 48:25 - type aliases
7. 52:44 - intersection types
8. 56:29 - using nullable types
9. 59:06 - optional chaining

CSS Course:
1. part 1 - 
2. part 2 -
3. part 3 - 
4. part 4 - 
5. part 5 - 
6. part 6 - 
7. part 7 -
8. part 8 - 
9. part 9 - 
10. part 10 - 
11. part 11 - 
12. part 12 - 
13. part 13 - 
14. part 14 - 
15. part 15 - 
16. part 16 - 
17. part 17 -
18. part 18 - 
19. part 19 - 
20. part 20 -
21. part 21 - 
22. part 22 -
23. part 23 - 

Mosh's React intro:
1. 2:44 - on react 
2. 6:27 - initing an app
3. 9:21 - react app file structure 
4. 11:22 - react components
5. 16:43 - react's DOM tree
6. 19:02 - react vs angular vue and other tools
7. 21:08 - Working with components with bootstrap
8. 33:12 - conditional rendering
9. 38:38 - event handling
10. 44:43 - State management, active class, and hooks
11. 50:43 - props for data passing and functions
12. 58:29 - states vs props
13. 1:00:01 - passing children components
14. 1:05:08 - component inspection with dev tools
15. 1:07:16 - buttons
16. 1:14:14 - alert

redux video:
1. 00:41 - what is redux?
2. 01:06 - global state: store, slices, 
3. 02:57 - actions and reducers
4. 07:09 - creating the store 
5. 11:31 - creating a counter slice
6. 15:24 - building actions and reducers
7. 20:53 - dispatch actions
8. 23:22 - creating actions with argurments
9. 25:45 - Asynch actions
10. 30:15 - adding another case for pending state(state before render)
11. 33:23 - redux dev tools

Angular project:
1. 09:32 - web application vs website, single page web applications, server side rendered apps
2. 20:53 - initing an app
3. 24:02 - angular app file structure
4. 52:58 - setting up node.js server 
5. 1:05:15 - handling the app's logic
6. 1:32:19 - handling the app view
7. 1:49:53 - creating the product component
8. 2:13:50 - App Pagination
9. 2:21:13 - more product basic functionalities
10. 3:13:00 - modularity in angular
11. 3:35:06 - Finishing touches 

Net Ninja's Vue playlist:
1. episode 1 - vue's role, vue widgets, regular non vue websites, vue 3 features
2. episode 2 - creating a single standlaone widget, creating a vue app, dynamic elements, click event handling, conditional rendering
3. episode 3 - mouse event handling, vfor, attribute binding, dynamic classes, Tolgging favorites, computed properties
4. episode 4 - use of vue cli, initing an app, the vue files, template references, multiple components 
5. episode 5 - vue props, custom events, even modifiers, slot for custom templates,  
6. episode 6 - game project, creating a sign-up form, vmodel, more components in the form(buttons, checkboxes), events
7. episode 7 - vue routing(setup, links, dynamic links, parameters, redirects), file structure
8. episode 8 - exporting data into a DB emulator, fetching data, conditional visualising data
9. episode 9 -
10. episode 10 - 
11. episode 11 - 
12. episode 12 - 

Vite intro video:
1. 
2. 
3. 
4. 
5. 
6. 
7. 
8. 
9. 

Net Ninja's Sass playlist:
1. episode 1 - sass role, sass task runner
2. episode 2 - creation and usage of sass files, gulp file role, styles functions
3. episode 3 - sass variables
4. episode 4 - sass partials modularity
5. episode 5 - making a css library (file structure, gulp and import setup)
6. episode 6 - nesting rules
7. episode 7 - 
8. episode 8 - 
9. episode 9 - 
10. episode 10 - 
11. episode 11 - 
12. episode 12 - 
13. episode 13 - 
14. episode 14 - 
15. episode 15 - 
16. episode 16 - 
17. episode 17 - 
18. episode 18 - 
19. episode 19 - 
20. episode 20 - 
21. episode 21 - 
22. episode 22 - 

Net Ninja's Bootstrap playlist:
1. episode 1 - 
2. episode 2 - 
3. episode 3 - 
4. episode 4 - 
5. episode 5 - 
6. episode 6 - 
7. episode 7 - 
8. episode 8 - 
9. episode 9 - 
10. episode 10 - 
11. episode 11 - 
12. episode 12 - 
13. episode 13 - 
14. episode 14 - 
15. episode 15 - 
16. episode 16 - 
17. episode 17 - 
18. episode 18 - 
19. episode 19 - 
20. episode 20 - 

Net Ninja's TailWind:
1. 
2. 
3. 
4. 
5. 
6. 
7. 
8. 
9. 









User-Friendly:
-keep interface simple
-consistant theme 
-providing event feeback (button clicks, focusing on elements, etc..)
-minimise memory load
-








The User interacts with the front 
-Mostly Browserer based today
--Not downloaded through shared infrastructure like NTFS
--Browser Dependant:
---Not runs Bare Metal (ie runs on browser that runs on OS)
---Resources are more limited
---Very portable (runs on many machines in many places)










