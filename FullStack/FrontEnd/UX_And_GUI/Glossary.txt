design
-tell the user's story (pun intended!)
-mockups









user interfaces editor
-UI components rely on:
--views - visual components, are basically rectangles that are attributed by left and top
---text view
----editText: allows 
-----phone number property - for inputting phone numbers
-----password property - for inputting password
-----auto complete property
---button
----Simple Button
----Image Button
----Toggle Button
----Check Box
----Radio Button
--viewgroup - visual organisers
--setContentView does the connection between the two
--layout file is the container config - responsible for describing the instantiation of both
---layout components
----constraintlayout
----linearlayout - hor/vert line organization
----tablelayout - matrix organization
----relativelayout 
----absolutelayout
----framelayout - one on top of other organiztion
---helps model the code as MVC and separate logic from view: controller: java package, view: res package
--component attiributes
---id: unique value for identification, we'll name them according to the activities they originate from(to find them from id)
---layout width/height/center in parent - alligning relative to parent
---text color/style - typography
---text - the actual text that is visualized
---gravity - for adjusting the positioning of the components
--adding elements:
---drag and drop in design view
---code them in text view
--constraining to relative elements - so the default of a floating button won't be a problem
--adding functionality - changing the activity logic
-modern layouts
--buttons
--text views
--images
--fonts
--listview & recycler view
material design

Dimensions
-pixels (px)
-inches (in)
-milimeters (mm)
-points (pt)
-density independant pixels (dp)
-scale independant pixels (sp)


whats the small thing that measures pictures? pictures -> pics -> pix -> pixel!


to look at:

where to start: https://www.reddit.com/r/graphic_design/comments/6rdgb2/want_to_become_a_graphic_designer_where_to_start/