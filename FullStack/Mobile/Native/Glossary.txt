android studio
-dependencies
--sdk
--jdk
--virtual device emulator (A(ndroid)V(irtual)D(evice) manager)
-android profiler - monitoring


-install
--package name - unique for each app, (convention to put web name backwards)
--api level: older machines support
---bigger level - more functionalities
---95% device support is preferable


-types of files
--layout files - View portion, looks/styling of app(equivilent of CSS)
--java files - Controller portion, app logic


-project explorer
-project view - a lot of stuff on screen
-android view structure - a smaller portion of project view
--tests packages
--manifests: artifacts the code
--java: represents controller
---main activity
--res: represents view, can hold resources
---layout
----activity_main.xml
-----design view
-----text view
---values
-gradle scripts: artifiacts projects into APK

-essential components
--activities - proccesses
---visual UI
---infrastructured as an hierarchy of classes
---each activity is independant of others
---one activity is the first to be presented to the user and acts as a main proccess which all others run on
---each activity starts the next one
--services - background processes
---infrastructed as an hierarchy of classes
---possible to connect to a service through an intended interface
---also run in the main 
--broadcast receivers - mobile signals  
---start activities to respond to information
---may use notification manager to alert the user
--content providers - enables outer mobile communiation
---handles communication API
---it's data probably stored at a designated DB
----the data can be accessed through contentresolver (which can talk to any content provider)
















