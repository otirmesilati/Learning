
#   &&&&&&&&&&&&&&&&&&&&&&&&&&&&&   Workshop : 1            &&&&&&&&&&&&&&&&&&&&&&&&&&&&&
#   &&&&&&&&&&&&&&&&&&&&&&&&&&&&&   LANGUAGE: Python        &&&&&&&&&&&&&&&&&&&&&&&&&&&&&
#   &&&&&&&&&&&&&&&&&&&&&&&&&&&&&   Date: 04/01/2024        &&&&&&&&&&&&&&&&&&&&&&&&&&&&&
#   &&&&&&&&&&&&&&&&&&&&&&&&&&&&&   Author: Otir Mesilati   &&&&&&&&&&&&&&&&&&&&&&&&&&&&&
"""
-> Functions: 6

Function Specifications:

1. Function Name?: Small explanation?
   IN:   ?
   OUT:  ?

2. Function Name?: Small explanation?
   IN:   ?
   OUT:  ?

3. Function Name?: Small explanation?
   IN:   ?
   OUT:  ?

4. Function Name?: Small explanation?
   IN:   ?
   OUT:  ?

5. Function Name?: Small explanation?
   IN:   ?
   OUT:  ?

6. Function Name?: Small explanation?
   IN:   ?
   OUT:  ?

"""

# Constraints & Dependencies: Non.


# Inner function declarations and implementations ?
def make_3d_point(x_value, y_value, z_value):
    return x_value, y_value, z_value


def get_x(point):
    return point[0]


def get_y(point):
    return point[1]


def get_z(point):
    return point[2]


def view_point(point):
    print("3D point:", point)


def distance_of_two_points(first_point, second_point):
    pass


# Testing will be done here
def testing_function():
    my_point = make_3d_point(1, 2, 3)
    print("The point we created is: ", my_point)
    print("x:", get_x(my_point), "  y:", get_y(my_point), "  z:", get_z(my_point))
    view_point(my_point)


testing_function()  # let the testing COMMENCE!


# Main function ?

# TODO:
# 1. Finish comment Format
# 2. Implement the Inner function Skeletons
# 3. Finish the Inner function's Scope and logic
# 4. Move on to Outer Functions
