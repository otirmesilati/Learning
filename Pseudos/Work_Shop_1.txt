(TODO: Patch this up a bit)

Procedural - building upon previous work:

& & & & & & Basics & & & & & &

^ ^ ^ ^ ^ Arithmetical ^ ^ ^ ^ ^

^ ^ ^ ^ Arithmetical Coding ^ ^ ^ ^

1. Decimal_To_Non_Decimal(decimal_number, destination_radix):

TLDR: While there are still digits, add powers of digits by radix.

GIVEN: decimal number, destination radix




<Abstraction dependencies> 
- Conversion opperation : <int>(String, int)parseInt

GIVEN: <int>decimal_number, <int>destination radix
a. str_decimal_number <- toInteger(decimal_number)
b. wanted_number <- parseInt(str_decimal_number, r)
EOF



2. from non decimal to decimal
3. fast conversion from power radixi

-- problems from converting from one radix to another? 

^ ^ ^ Dimensional Analysis ^ ^ ^

1. cents to dollars

-- maybe add in the notebook problems like 
converting cents to dollars? shekels to Agurot?

2.1 calculating a final price for a purchase
2.2 Calculating a precent discount 
2.3 calculating final + discount

-- move in the notebook the place of roundings
from elementary analysis to Arithmatic
specifically: to Arith Coding
After Dimensional analysis

^ ^ ^ Algorismics ^ ^ ^



2. Add_Two_Integers(first_number, second_number):

TLDR: While there are still digits, add current digits together

a. Summed_Number <- 0
b. while(are_digits_left(number) NOT FALSE)
b.a. Summed_Number <- first_number % 10 + second_number % 10
c. RETURN Summed_Number 

2. addition of three numbers - no input

3. 

^ ^ ^ ^ ^ Number theory ^ ^ ^ ^ ^

a. are_digits_left(number):
a.a IF number > 0
a.a.a. TRUE
a.a.b FALSE


1. is_A_Poisitve?
IN:
OUT:

2.1 is_A_Digit?
IN: symbol
OUT: an answer if it was a digit or not

2.2. if_A_Digit_Inc
IN:
OUT:

3.1 which of two numbers is bigger?

3.2 three numbers

^ ^ ^ ^ ^ Iterations ^ ^ ^ ^ ^

1.1. Termial function

1.2. Average function

2.2 (use 1. function from arith)multiplying function
.3 power function


^ ^ ^ ^ ^ Recursion ^ ^ ^ ^ ^

^ ^ ^ ^ ^ Arrays ^ ^ ^ ^ ^
searching?
sorting?
