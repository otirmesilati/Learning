migrated this from an unwanted place, see where to map this into
< < < < < < < < Process Life Cycle > > > > > > > > 









< < < < < < < < Message/Call Processes > > > > > > > >

- callbacks(calls that are needed for the completion of a process, which is halted until the callback is done)

- calls (API calls)
-- System Calls 
-- HTTP requests
-- signals: I(nter)P(rocess)C(ommunication) callbacks + decouple the local slot(handler) -> thus the slot can be on a different thread. 
--- sigstp, sigcont, sigint etc..
-- system calls: signals while having the slot be the scheduler, though they can also be regular procedures instead of acting parallely.









< < < < < < < < Standard Processes > > > > > > > > 

% % % % % % % Process States % % % % % % %

Running
Ready
Wait
Sleep
Kill









% % % % % % % Inter-Process Communication(IPC) % % % % % % %

& & & & & & Signal Handling & & & & & &

-signalling callbacks
-recieve signals from the OS to handle events
-OS receive interrupts from processes to handle events

-paralleling proccesses:
--2 processes running in parallel, each has 2 stage, how it works:
--choose either stage 1 proccess 1, or stage 1 proccess 2, first chosen:
--choose either stage 2 proccess 1, or stage 1 process 2, and so on...

-Mobile Processing
--each application runs its own linux process - a single process each time
--when an app is no longer the one focused - it's proccesses die
--each process has a unique pid
--processes communicate resources to one another (communication sharing)









< < < < < < < Linux Frame Processes > > > > > > > 

% % % % % % % Linux Frame Suites/Families % % % % % % % 

& & & & & & ? Office & & & & & &









& & & & & & Linux System Utility & & & & & & 









% % % % % % % Linux Frame Manipulation % % % % % % % 

what to leave here from here?
- Maximize
- Restore
- MiniMize
- Size
- Close









% % % % % % % Linux Frames - Application Types % % % % % % % 

& & & & & & HyperVisors & & & & & &









& & & & & & Container Manager & & & & & &









& & & & & & Shells & & & & & &









& & & & & & W(ork)L(oad)A(utomation) Manager/Job Schedulers & & & & & &









& & & & & & Installers & & & & & &

-the linux installers?









& & & & & & Package Managers & & & & & &

-apt? what more?









^ ^ ^ ^ ^ FTP File Managers ^ ^ ^ ^ ^ 









& & & & & & Web Browsers & & & & & &

- firefoex?









& & & & & & Editors & & & & & &

-mousepad? 









^ ^ ^ ^ ^ Word Processors ^ ^ ^ ^ ^

-libreword?









^ ^ ^ ^ ^ Code Editors ^ ^ ^ ^ ^

merge-map the following to the above:








------ tabbing two spaces
------ case insensitive for lower case and sensitive for upper case search in TUIL
------ enabling true terminal color schemes and dark background
------ enabling system clipboard
------ enabling split h/v window
----keymaps
----- leader key configuration
----- nvim navigator (between split panes)
----- split panes maximizer
----- vim motions suround and replace
---plugins
----lualine
----telescope
----nvimtree
----comments
----- enables commeting out line with gcc
---plugins-setup




map to nvim portion, difference between tree sitter and LSP:
-------------
LSP is a protocol while tree-sitter is a parsing tool and library. LSP is a protocol developed by Microsoft for IDEs to communicate with a separate process 
to provide annotations and insight into source code. Practically, tree-sitter is usually used for syntax highlighting, 
while servers implementing LSP are used for compilation errors, warnings, jump to definition, linter warnings, symbol highlighting, etc etc etc.


	
leephillips on March 13, 2022

Tree-sitter works like a syntax highlighting plugin, and doesnt require communication with an external process. Its like syntax highlighting but 
with a deeper understanding of the programming language, not based just on regular expressions. So not only is the highlighting better,
but you can do more things, such as selecting blocks or jumping among them. One of my favorite goodies is being able to ask the editor what 
function my cursor is inside.
--------------










^ ^ ^ ^ ^ IDES ^ ^ ^ ^ ^









& & & & & & Editors & & & & & &

map/dfs like this(from functionality to visuals):
-notepad -->> Notepad.exe 
--GUI
---MenuBar -<Top>
---Editor Area -<Center>
---StatusBar -<Bottom>

----funftionalities
-----text manipulation: <Menu Bar> -> edit -->> Alt + e
---
-notepad++
-vsc
-vim









< < < < < < < Windows Frame Processes > > > > > > > 

where to map this to?  maybe the frame manipulation? 
% % % % % % % OS Desktopping SCs & Global SCs % % % % % % %


Desktop Backround View/Minimize all windows --> spr + d 
Left-Click Start Button --> spr
Focus On Search-Box --> spr + <Text>
Left-Click <Digit> Pinned App Icon --> spr + <Digit>
Left-Click System Tray Arrow --> spr + b
Left-Click Notification Area Button --> spr + a







% % % % % % % Windows Frame Suites/Families % % % % % % % 

& & & & & & Microsoft Office & & & & & &

maybe move the shortcuts to the individual frames mapping below?
-- regular 4
---word
----GUI
-----title bar
-----ribbon
------menu bar
------toolbar
-----ruler
-----Document Area
-----Status bar
----sc - winword
---excel
----sc - excel
---powerpoint
----sc- powerpnt
---outlook
---- sc - outlook
--what here?
---access




move this to frame handling:

Excel Keyboard ShortCuts:

Navigation:
1. Focus on namebox: ->ALT+F3
2. Focus on A1 cell: -> CTRL+HOME
3. Focus on last occupied Horizontal and Vertical cell: CTRL+END
4 Focus on last occupied cell/limit of sheet: -> CTRL+Arrow 
5. Focus on row: CTRL+SPC
5. Focus on column: SHFT+SPC
5. Spreadsheet titles: ->F6

Launchers:
1. Move or Copy: ->ALT+E+M

Edit:
1. Add row/column (depends on focus):CTRL++

NeoVim Keyboard Shortcuts: (move this)







& & & & & & Windows System Utility & & & & & & 

- Windows System Utility Apps (reorder what's below in a meaningful way)
-- control panel (control of Environment, system preferences, personalization)
---control panel -> control.exe
--defrag
---defrag -->> defrag.exe
--media player
---media player -->> dvdplay.exe
--dialer
---dialer -->> dialer.exe
-- event viewer (view logging, monitoring, warnings) -->> eventvwr.exe
-- task manager (process handling) -->> taskmgr.exe
-- network center (network config)
-- resource monitor<refmon> (hardware monitoring)
-- performance monitor<perfmon> (a broader system monitor than refmon)
-- system configuration<msconfig>
-- regestry editor (windows native DB)
-- windows disk-cleaner manager (space freer)
-- disk manager (as GUI api) & Disk Part (as CLI/terminal/shell api) 


map the following:
?? -->> charmap
?? -->> appwiz.cpl
?? -->> compmgmt.msc
?? -->>
?? -->>
?? -->>
?? -->> control /name Microsoft.BackupAndRestoreCenter
?? -->> control /name Microsoft.BackupAndRestoreCenter
?? -->> control /name Microsoft.BitLockerDriveEncryption
?? -->> control /name Microsoft.AutoPlay
?? -->> control /name Microsoft.CredentialManager

?? -->> control /name Microsoft.BitLockerDriveEncryption
?? -->> control /name Microsoft.BitLockerDriveEncryption
?? -->> control /name Microsoft.BitLockerDriveEncryption
?? -->> control /name Microsoft.BitLockerDriveEncryption




what about dedicated folders for these? utilities folder? wasn't there another one? how to map those?

-Settings Sections
--Display: Settings -> System Default    -> DpiScaling.exe
--Behaviour 
--Display Side Window     -> DisplaySwitch.exe









& & & & & & Adobe & & & & & & 

- Photoshop Suite?









% % % % % % % Windows Frame Manipulation % % % % % % % 

- Maximize
- Restore
- MiniMize
- Size
- Close









% % % % % % % Windows Frames - Application Types % % % % % % % 

& & & & & & HyperVisors & & & & & &

-Spinning multiple kernels(move to virtualization?)
- hypervisors as supervisors of kernels (maybe move to virtualization?)
-examples
--qemu
---virt-manager
--virtual box


& & & & & & Container Manager & & & & & &

-Os Kernel(move to containerization?)
-docker desktop









& & & & & & Shells & & & & & &

-cmd 
--command prompt -> CMD.exe









& & & & & & W(ork)L(oad)A(utomation) Manager/Job Schedulers & & & & & &
job schedulers
- task scheduler
-- tasks
--- when (time, event)
--- what (execute, send email, display message)

- CICD schdeuler
-- jobs
--- local machine
--- network
--- nodes
-- pipelines 









& & & & & & Installers & & & & & &

- installers don't take into consideration any other software and versions than the one it installs -> hurt other install dependencies









& & & & & & Package Managers & & & & & &

- package managers take into consideration other versions -> thus also take into consideration of handling version conflicts -> minimize dependency hell
- packmans: pip(for python packages).. what more?
-examples
-- homebrew
-- choco
-- npm 
-- pip
-- scoop
-- packer
-- apt
--winget
--oh-my-posh
--mocha








& & & & & & File Managers/Browsers & & & & & & 

-windows file explorer
-thunar
-dolphin
-xfe

-api calls inside the machine (leave it in the title? write this somewhere else? important intuition)
-mc's windows file manager? apple's files? total commander? Linux' thunar, nautilus, xfe(xfileexplorer), gnome files, dolphin, pcman?...
-non GUId file managers?


^ ^ ^ ^ ^ FTP File Managers ^ ^ ^ ^ ^ 

-file zilla
-commander one









& & & & & & Web Browsers & & & & & &

- file browser + api calls outside the machine(same sentiment as above, important to adress)
-chrome
--GUI
---tabs row
---top toolbar
---bookmarks bar
---Content Area

-firefox
-edge? 
-Tor









& & & & & & Editors & & & & & &

map/dfs like this(from functionality to visuals):
-notepad -->> Notepad.exe 
--GUI
---MenuBar -<Top>
---Editor Area -<Center>
---StatusBar -<Bottom>

----funftionalities
-----text manipulation: <Menu Bar> -> edit -->> Alt + e
---
-notepad++
-vsc
-vim

^ ^ ^ ^ ^ Word Processors ^ ^ ^ ^ ^

- wordpad
- word

- desktop publishers

^ ^ ^ ^ ^ Code Editors ^ ^ ^ ^ ^


-visual studio code -->> Code.exe

-notepad++ -->> Notepad++.exe



^ ^ ^ ^ ^ IDES ^ ^ ^ ^ ^

-eclipse -->> Eclipse.exe
--perspective - visual representation of components
---defualt perspective
---- MenuBar -<Top>
----ToolBar -<Top, Below Menubar>
- Package-Explorer View
- Editor Area
- Outline View
- Problems View










^ ^ ^ ^ File Creation ^ ^ ^ ^

project: -> file -> new -> java project 
class: -> file -> new -> class





























































































^ ^ ^ ^ ^ Visual Studio ^ ^ ^ ^ ^
Windows Naming -> DevEnv.exe

^ ^ ^ ^ IDE GUI elements ^ ^ ^ ^

MenuBar
ToolBar
ToolBox Explorer View
Editor Area
Solution-Explorer View
Properties View
Output View


^ ^ ^ ^ File Creation ^ ^ ^ ^

project: -> file -> new -> java project 
class: -> file -> new -> class


^ ^ ^ ^ ^ Pycharm ^ ^ ^ ^ ^
Windows Naming -> Pycharm64.exe

^ ^ ^ ^ IDE GUI elements ^ ^ ^ ^

classic GUI:

Main ToolBar
Secondary ToolBar
Navigation Bar
Editor Area (Gutter - the number line)
Project window Bar(basically project-explorer)
tool window 
Right And Left tool window Bars

new GUI:

?

^ ^ ^ ^ File Creation ^ ^ ^ ^

project: -> file -> new -> java project 
class: -> file -> new -> class


cad


packettracer
Windows Naming -> ?

dev tools (ctrl shft c) (dock: 3 dots in upper menu -> dock)
network option -> a list of requests
click on a request -> see more information of request (header, prewview...)
filter -> by types


browsers? 


clis?
- dos
- zsh
- iterm2
- warp
- kitty
- alacrity






& & & & & & DBMS & & & & & &

^ ^ ^ ^ ^ Relational DBMS ^ ^ ^ ^ ^

non relational dbms

^ ^ ^ ^  MongoDB Compass ^ ^ ^ ^ 
mongodbcompass

























































































move this to the desktopping portion
^ ^ ^ ^ ^ MacOS Deskttoping SCs ^ ^ ^ ^ ^


& & & & & & Linux Desktopping SCs & & & & & & 

^ ^ ^ ^ ^ Ubuntu ^ ^ ^ ^ ^

Cinnamon (version ?)
ub

keyboard shortcuts 

app launching

1. Terminal: -gnome terminal -> ctrl+alt+t (run command: alt+f2)
2. Run CommandL -null (Maybe hard coded to system?) -> alt + f2
3. system monitor:
4. nautilus: 
5. firefox
6. text editor
7. calculator
8. software updater

navigation
1. overview and search:
2. desktop view
3. lock screen
4. switch workspace
5. open quick settings
6. open settings
7. position windows
8. switch windows
9. focus on windows
10. apps window


^ ^ ^ ^ ^ Debian ^ ^ ^ ^ ^

1. Terminal: -xfce terminal -> ctrl + alt + t
2. run?
3. monitor?
4. Thunar File Manager: -xfce FM -> spr + e
5. FireFox Web-Browser: -> ctrl + alt + f
?





% % % % % % % Frame Handling/App Specific SCs % % % % % % %

Left-Click Frame's Boarder/Open Window Context Menu --> alt + spc
[When Focused]Left-Click Icon/Open App Icon Context Menu --> shft + f10 | menu key(fn + right ctrl)

Maximize Frame --> spr + up | (Using Window Context Menu) alt + spc -> x
Restore Frame --> spr + dwn | (Using Window Context Menu) alt + spc -> r
Minimize Frame --> spr + dwn + dwn | (Using Window Context Menu) alt + spc -> n
Size --> <None> | (Using Window Context Menu) alt + spc -> s
Close <<Global>> --> alt + f4








& & & & & & Editors & & & & & &









& & & & & & IDEs & & & & & &



^ ^ ^ ^ ^ Eclipse ^ ^ ^ ^ ^

Key Bindings -> ctrl + shft + l 

Switch Focus Visualy between Perspectives -> ctrl + f8
Switch Focus between views: ctrl + f7 

Refresh view: f5

^ ^ ^ ^ Menu Bar Options ^ ^ ^ ^

Switch Focus to Menu Bar: alt OR f10

File
Edit
Source
Refactor
Navigate
Search
Project
Run
Window
Help

^ ^ ^ File Option ^ ^ ^ 


^ ^ ^ Edit Option ^ ^ ^


^ ^ ^ Source Option ^ ^ ^


^ ^ ^ Refactor Option ^ ^ ^


^ ^ ^ Navigate Option ^ ^ ^


^ ^ ^ Search Option ^ ^ ^


^ ^ ^ Project Option ^ ^ ^


^ ^ ^ Run Option ^ ^ ^


^ ^ ^ Window Option ^ ^ ^


^ ^ ^ Help Option ^ ^ ^


^ ^ ^ ^ Editor Area Text Manupilation ^ ^ ^ ^

Switch Focus Visualy for Editor Tabs: ctrl + f6

^ ^ ^ File manipulation ^ ^ ^

Save File: ctrl + s
Close File View Tab: ctrl + w
reopen?

^ ^ ^ Text Editing ^ ^ ^

Copy Text -> ctrl + c
Cut Text -> ctrl + x 
Pase Text -> ctrl + v

Undo Text Edit: crtl + z
Redo Text Edit: ctrl + y

Toggle ToolTip Decsription: f2









run: alt + shft + x THEN j









^ ^ ^ ^ ^ Pycharm ^ ^ ^ ^ ^

Window wich Key Bindings are an option -> ?

Settings window: ctrl + alt + s 
find action: ctrl + shft + a

Swich

Refresh view: ?

^ ^ ^ ^ Menu Bar Options ^ ^ ^ ^

Switch Focus to Menu Bar: f10 

File
Edit
View
Navigate

Navigate
Search
Project
Run
Window
Help

^ ^ ^ File Option ^ ^ ^ 


^ ^ ^ Edit Option ^ ^ ^


^ ^ ^ Source Option ^ ^ ^


^ ^ ^ Refactor Option ^ ^ ^


^ ^ ^ Navigate Option ^ ^ ^


^ ^ ^ Search Option ^ ^ ^


^ ^ ^ Project Option ^ ^ ^


^ ^ ^ Run Option ^ ^ ^


^ ^ ^ Window Option ^ ^ ^


^ ^ ^ Help Option ^ ^ ^


^ ^ ^ ^ Editor Area Text Manupilation ^ ^ ^ ^

Focus on Project Window bar: alt + 1

Switch Focus Visualy for Editor Tabs: ctrl + tab
Move Focus left and right for Editor tabs: alt + right / alt + left
View Tab Focus menu: alt + home 

^ ^ ^ File manipulation ^ ^ ^

Save File: ctrl + s 
Close File View Tab: ctrl + f4
reopen?

^ ^ ^ Text Editing ^ ^ ^

Copy Text -> ctrl + c
Cut Text -> ctrl + x
Pase Text -> ctrl + v

Undo Text Edit: ctrl + z
Redo Text Edit: ctrl + y

Toggle ToolTip Decsription: ?









//   ^ ^ ^ ^ Visual Studio Code

1. Focus on specific tab: alt + <Number> 
2. Round-Robin focus between open tabs: ctrl + tab
3.

1. Open a new tab: -> ctrl + t
2. Close a tab: -> ctrl + w
3. 


^ ^ ^ ^ ^ Visual Studio ^ ^ ^ ^ ^

Key Bindings -> ctrl + shft + 1 (self assigned) 
Perspectives  not so popular in VS

^ ^ ^ ^ Menu Bar Options ^ ^ ^ ^

File
Edit
View
Git
Project
Build
Debug
Test
Analyze
Tools
Extensions
Window
Help

^ ^ ^ File Option ^ ^ ^ 


^ ^ ^ Edit Option ^ ^ ^


^ ^ ^ Source Option ^ ^ ^


^ ^ ^ Refactor Option ^ ^ ^


^ ^ ^ Navigate Option ^ ^ ^


^ ^ ^ Search Option ^ ^ ^


^ ^ ^ Project Option ^ ^ ^


^ ^ ^ Run Option ^ ^ ^


^ ^ ^ Window Option ^ ^ ^


^ ^ ^ Help Option ^ ^ ^


^ ^ ^ ^ Editor Area Text Manupilation ^ ^ ^ ^

Copy Text -> ctrl + c
Cut Text -> ctrl + x 
Pase Text -> ctrl + v





jk to exit insert mode?
leader + '+' to increment a number (- to dec)
leader + s + v to split vertically (h horizon, x close)
leader to (new) tp (prev) tn (next) tx (close)
ctrl + h/l to jump left right between panes
leader sm for split pane maximization
surround: y+s+@+character to surround
-TUIL commands: 
:w - save file
:q - exit file
:e <filename> - go to a file
:set - change settings
:lua - run lua command
:help - open help


- motions:
h(left)j(down)k(up)l(right) - arrows
w , b - next, previous begining of word
e - end of the current word
0 , $ - begining , end of the line 

gg - begining of the file
shift + g - end of the file

- operators:

d - delete operator
dd - delete the whole line

c - change operator
c(change = delete + go to insert mode) + i + opening curly brace - change everything inside curly braces

. - repeat previous action again

u - undo operator
control + r - redo operator

/ - search operator
/ + enter + n (to go to next find) - Search

-- combimotions: (keep this? or just suffice for the above portion?)
delete a word: d+w
replace a symbol: c+s
replace a word: g+r+w
- comments plugin:
-- commenting a single line gcc
-- commenting multiple line g+c+<number>+j


^ ^ ^ ^ ^ NeoVim ^ ^ ^ ^ ^

^ ^ ^ ^ Text User Interface Line ^ ^ ^ ^

^ ^ ^ Modes ^ ^ ^

Normal - For reading
Visual - Normal + text select
Insert - For reading + writing

^ ^ ^ ^ Configurations ^ ^ ^ ^

syntax highlighting (treesitter)
code snippets (lsp)
file explorer
git integration
fuzzy finder

^ ^ ^ ^ Vim Commands ^ ^ ^ ^

^ ^ ^  Editing ^ ^ ^ 

w: *save*
q: *close*


former: to be deleted 
// & & & & & & & & & & NeoVim & & & & & & & & & &




^ ^ ^ ^ ^ Vim ^ ^ ^ ^ ^

i *Change to Editing(Insert) mode*
esc *change to normal mode*


^ ^ ^ ^ File Navigation ^ ^ ^ ^

h *cursor goes left for one letter*
j *cursor goes down for one letter*
k *cursor goes up for one letter*
l *cursor goes right for one letter*

w - right one word
b - left one word

^ - line begining 
$ - line end 

1. one line jump navigation: j(DOWN)/k(UP)
2. multiple line jump navigation: <Number> + j(DOWN)/k(UP)
3. [smartcase dependent]Searching-vim level: /<Search Term> 


// ^ ^ ^ ^ Key-Binds ^ ^ ^ ^

// ^ ^ ^ Inner file manipulation ^ ^ ^

1. [insert mode] exit -> j + k
2. [normal mode] clear file search highlights -> <leader> + n + h
3. [normal mode] incerment/decrement -> <leader>++ 
4.

// ^ ^ ^ Nvim Panes ^ ^ ^

1. [normal mode] New vertical pane -> <leader> + s + v
2. [normal mode] New Horizontal pane -> <leader> + s + h
3. [normal mode] Close Focused pane -> <leader> + s + x

4. maximise/minimize pane -> <leader> + s + m

// ^ ^ ^ Nvim Tabs ^ ^ ^

1. [normal mode] New Tab -> <leader> + t + o
2. [normal mode] Next Tab -> <leader> + t + n
3. [normal mode] Previous Tab -> <leader> + t + p
4. [normal mode] Close Tab -> <leader> + t + x
5. 


// ^ ^ ^ ^ Dependencies: ? ^ ^ ^ ^ 

// ^ ^ ^ vim-level functionality ^ ^ ^
1. relative numbers printed on the editor -> opt.relativenumber
2. tab space jumps -> opt.tabstop
3. in-file vim level search -> opt.smartcase
4. line highlight -> opt.cursorline
5.
6.
7.

// ^ ^ ^ ^ ^ ^ Tmux ^ ^ ^ ^ ^ ^ 

// ^ ^ ^ ^ ^ ^ Configurations ^ ^ ^ ^ ^ ^ 

1. 







& & & & & & Browsers & & & & & &

^ ^ ^ ^ ^ File Browsers ^ ^ ^ ^ ^
web browsers

^ ^ ^ ^ ^ Shell/Terminal Browser : Windows Terminal ^ ^ ^ ^ ^

1. Launch shell tab via order: ->ctrl+shft+<Number>
2. Launch duplicate shell tab: -> ctrl+SHFT+D
3. Launch defualt pane shell tab : ->CTRL+SHFT+T
4. Close pane shell tab : ->CTRL+SHFT+W
5. Zoom In / Enlarge and decrese text: -> CTRL+plus/minus
6. Search text: CTRL+SHFT+F
7. Duplicate into two half panes (Sessions): -> ALT+SHFT+D
8. Launch shell window: -> CTRL+SHFT+N
9. 









& & & & & & CLIs & & & & & &

^ ^ ^ ^ ^ Windows Terminal SCs ^ ^ ^ ^ ^


^ ^ ^ ^ ^ 




mysql
- exit: ctl + c


































- os native frames? frame families? like windows msc?
- apps vs programs?











//   ^ ^ ^ ^ Taskbar ^ ^ ^ ^

1. Focus on Hidden Items on TaskBar: -> super + b
2. Write in Serch Box: -> super
3.  

//   ^ ^ ^ ^ ^ CLI ^ ^ ^ ^ ^ 

//   ^ ^ ^ ^ CMD ^ ^ ^ ^

1. Launch chrome in certain URL: start chrome <URL>
2. Check directories and files in a directory: dir
3. Change into a directory: cd <Directory Name>
4. Print a string: echo <String>
5. 

//   ^ ^ ^ ^ PowerShell ^ ^ ^ ^

1. Launch chrome in certian URL: Start-Process chrome <URL>
2. Check directories and files in a directory: Get-ChildItem
3. Check hidden directries and files: Get-ChildItem -Force
4. Change into a directory: cd <Directory Name>
5. Print a string: Write-Output <String> 
6.

//   ^ ^ ^ ^ Bash ^ ^ ^ ^

1. still trying to find WSL browser launching command :(
2. Check directories and files in a directory: ls
3. Check hidden directories and files in a directory: ls -la
4. Print a string: echo <String>
5. 




//   ^ ^ ^ ^ ^ ^ Linux-Navigation ^ ^ ^ ^ ^ ^











//   ^ ^ ^ ^ ^  Posh-Windows-Navigation

1.
2. 


//   ^ ^ ^ ^ ^ Browsers ^ ^ ^ ^ ^

1. Duplicate tab: ctrl + d + entr
2. Move tab left/right: ctrl + shft + PgUp/PgDn
3. 



//   ^ ^ ^ ^ ^ Editors ^ ^ ^ ^ ^













-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------

map later, from what was Shells Glossary:


what to leave here? what to move to the general shell workshop? (maybe things like commands for the devops tools setup and configuration?)

DELETE AFTER FINISH:

before starting, read these: 
1. https://www.reddit.com/r/ITCareerQuestions/comments/ojchev/i_want_to_be_a_sysadmin_where_and_how_to_start/
2. https://www.reddit.com/r/sysadmin/comments/1eiwh0i/should_active_directory_ad_be_common_knowledge/
3. https://en.wikipedia.org/wiki/Unix_wars

and finish these: https://www.youtube.com/watch?v=QHial8xwfh4 , https://www.youtube.com/watch?v=WMy3OzvBWc0









% % % % % % % % Package Managers & FrameWorks % % % % % % % %






% % % % % % % % Monitoring % % % % % % % %

jenkins? flux? prom?









when to move this to the batch glossary?:
^ ^ ^ CMD Run Command ^ ^ ^



where timeout? pause?
timeout /t 10 >nul (for delay of 10 seconds)









cisco interworking os
commands (pre-language) (tcl langauge where? add it to the future languages in notepad?)

input line text: <device host-name> <mode symbol>
enable : command to 

- modes
-- user exec mode:

--- mode symbol is >
--- user exec mode as the default, also called "normal mode"
--- user exec mode can't make changes


--- exit CLI -> exit OR logout
--- command list -> ?


--- system info -> show

--- enter priviledged exec mode -> enable 



-- priviledged exec mode:

--- mode symbol is #

--- exit priviledged exec mode -> disable



-- configuration mode

--- mode symbol is (config)#

--- password setting -> password


onepk? 
more material: network programming pdf - https://www.cisco.com/c/dam/global/cs_cz/assets/ciscoconnect/2013/pdf/T-SDN4-Network_Programming_onePK_EEM-Bruno_Klauser.pdf
























