& & & & & & Problems Coming up in the process & & & & & &

^ ^ ^ ^ ^ Requirements ^ ^ ^ ^ ^

^ ^ ^ ^ ^ Design ^ ^ ^ ^ ^


(leave this portion here in optimization? 
or rather transfer it to Design/language skill codex?)
^ ^ ^ ^ Arithmatic Code Design Skills ^ ^ ^ ^

1. Know how to manipulate numbers:
- how to cut digits
- how to add digits

^ ^ ^ ^ ^ Testing ^ ^ ^ ^ ^


1. UnClear Goals
2. Missed Goals
3. Communication problems
4. Lack of visualization tools:
4.1. Have Visual Tools one the first meet up
4.2. Have The visual tools accesible through out the code desgin process
4.3. Right After Getting done building a pseudo code:
4.3.1. Explain it to yourself, visualise the compilation
4.3.2. try to break the idea down 
5. Help The Developer while they are stuck
6. Each developer takes pseudo code and interperts it his own way:
6.1. though they differ in peudoing and translating their ideas to viable code, they should reach similar end points of Design
6.2 maybe a tool to ease the two proccesses of PSEUDO + TRANSLATE IDEAS?

Top of the head solutions

 Establishing a communication line (Team chat) 
 Having the team meetup and catch up on further Goals (Daily)

Crowd's input
